Classes:
  - Input //LUCA
  - Output //LUCA
  - Player //GABRY
  - EnemySpawner //YEHOR
  - Enemy //NICOLA
  
Input:
  Methods:
    - IsPressed(key_code)
    
Output:
  Methods:
    - PrintChar(pos, glyph, color)
    - char GetChar(pos)
    - Fill(pos1, pos2, glyph, color)
    
Player:
  Members:
    - COORD m_pos //coordinates of the first '='
    - int m_size
    - int m_lives
  Methods:
   - Start()
   - Update()
   - Move()
   - TakeDamage()
   
EnemyManager:
  Campi:
    std::vector<Enemy> enemies; //enemies.size() enemies[0] enemies.push_back()
  Methods:
    - Start()
    - Update() //enemies[i].Update() if(enemies[i].colliding) DeleteEnemy()
    - Spawn()
    - DeleteEnemy()
    
Enemy:
  Members:
    - COORD m_pos
  Methods:
   - Start()
   - Update() //Move()
   - Move()
  Fields:
   - bool colliding
  
  
  SINGLETON:
  
//Singleton declaration

//.h
EnemyManager:
private:
  std::vector<Enemy> enemies;
public:
  static EnemyManager& Get();
  void Start();
  void Update();
  void Spawn();
  
//.cpp
static EnemyManager Get() {
  static EnemyManager s_instance;
  return s_instance;
}
  
 
//Singleton use
EnemyManager::Get().Start()
  
//thread sleep
std::this_thread::sleep_for(std::chrono::milliseconds(500))
  
  
  
